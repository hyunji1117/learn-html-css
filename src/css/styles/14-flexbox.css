@import "/src/common/theme.css";

html,
body {
  font-family: SUIT, sans-serif;
}

body *,
body *::before,
body *::after {
  box-sizing: border-box;
  /* 2. reset 안시키면 border-box로 작동이 된다. */
}

/* flex 파헤치기 */

.case-01 {
  /* flex container 영향을 주는 거는 직계 자식만 가능하다 
  직계가 아닌 자식에 영향을 주는 방법은 이후에 다뤄 보겠다. */
  display: flex;
  /*  */
  /* flex-direction: row; */
  /* 2 */
  /* flex-wrap: nowrap; */
  /* flex-direction 속성과 flex-wrap 속성을 단축해서 지정할 때 */
  flex-flow: row nowrap;
  /* 메인 축이 row이다. */
  justify-content: center;
  /* flex-flow: row-reverse nowrap; --- row-reverse일 때*/
  /* justify-content: flex-end; 하면 반대로 왼쪽으로 붙는다. */
  /* row를 유지하면서 start인지, end인지 */
  border: 1px solid red;
  /* padding: 10px; */
  inline-size: 622px;
  block-size: 522px;
  /* align-items: start; */
  /* 교차축을 기준으로 상단에 찌뿌 */
  align-items: center;
  /* 부모의 영역 안에서 내가 차지하는 줄에서 가운데로 가는 것이다. */
  /* row-gap, column-gap을 함께 지정할 수 있는 단축 속성 */
  gap: 20px;
  /* between 처럼 바깥 간격을 제외하고 십자 라인으로 중간에만 간격이 생긴다. */

  /* 'item'단어가 포함된 모든 속성을 선택할 때 '*'를 붙인다. */
  [class*="item"] {
    /* 2. */
    /* margin-block: 10px; */
    /* margin-collabcing, BFC경우에는 독립된 개체로 작동한다.  */

    background: var(--pastel-yellow);
    /* inline-size: 100px;
block-size: 100px; */
    /* 가로 기준으로 가게 하고 싶다. (블록에게만 주는 것이다.) */
    text-align: center;
    border: 1px solid currentColor;
    /* 높이 안에서 가운데 정렬을 하고 싶다. */
    /* line-height: 100px; */
    /* block 사이즈과 동일한 값을 준다. */
    /* acender크기과 decender의 크기가 글자 폰트마다 달라 정확하게 맞추는 것이 쉽지가 않다. text 기준으로 half reading을 밀어내는 원리이다. */
    align-content: center;
    /* 기존에 세로 기준 가운데 정렬을 지원하지 않을 떄 사용하던 트릭 
    이 기능이 2024년에 들어왔다!!! 
    flex에서만 쓸 수 있다고 생각하는 사람이 많다. 
    text-align: center;와 세트로 쓸 수 있다! */
  }

  /* 줄바꿈이 금지 되어 있다. */
  .item1 {
    inline-size: 200px;
  }

  .item2 {
    /* inline-size: 200px; */
  }

  .item3 {
    /* inline-size: 200px; */
  }
}

.case-02 {
  border: 1px solid green;
  width: 502px;
  /* border선까지 포함해서 2px 추가함 */
  inline-size: 502px;
  display: flex;
  flex-flow: rwo nowrap;

  [class^="item"] {
    border: 1px solid currentColor;
    /* width: 100px;
    inline-size: 100px;
    height: 100px;
    block-size: 100px; */
    text-align: center;
    align-content: center;

    /* auto면 상관 없는데 100px로 되어 있으면 다른 어떤 important width, height 값 보다 우선으로 적용된다. (⚠️중요⚠️) */
    /* flex-basis: content;
    flex-grow: 0;
    flex-shrink: 1; */
    flex: 0 1 content;
    /* 단축 */
    /* width: 200px;
    inline-size: 300px; */


    /* 순서 */
    /* .item4 {
      order: -1;
      기본 order 순서는 0이다. 0보다 적은 수를 주면 그 앞으로 배치되게 된다.
    } */

    /* 짝수번째 노가다 버전
    .item2,
    .item4 {
      order: -1;
    } */

    /* 홀수번째 똑똑이 버전 */
    div:nth-child(even) {
      order: -1;
      flex-grow: 2;
    }
  }
}