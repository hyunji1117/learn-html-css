/* 25.02.24(월) */
/* 쉬는 시간에 과제 피드백 확인하기. 
다른 팀원읠 피드백도 봐야한다. 강사님이 피드백 
과제는 상대경로로 작업 해야 한다. 
로컬과 깃허브에 배포할 때는 상대경로만 적용이 가능하다. 

js는 길용쌤은 스스로 하는 수업을 한다. 속도가 빨라 진다는 것.
러버덕 앉혀 놓고, 말을 많이 해봐야 한다. 
동기 스쿨 많이 열어본자. 비슷한 눈 높이에서 질문이 나온다. 
기술면접 따로 준비할 필요가 없게 된다. 

10:00 ~ 10:50
CSS 변수 활용 + 기능 중심 네이밍을 적용하여 코드의 유지보수성과 논리적 구조를 개선하는 방법을 학습한다. 

사용자 정의 속성 (CSS 변수)
https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_cascading_variables/Using_CSS_custom_properties

AI 요약을 활용 해봐라. (deepsik)

--- css 변수 지정 --- 
$priamry: red;

.member_link {
  background-color: $primary;
}

$__list {
  list-style: none;
  border: 1px solid $primary;
}

a {
  color: $primary;
}

따라 치고 결과가 잘 나온 것이 내것이라고 착각하지 말자. 
화면 보면서 이해를 하자.

sass 변수와 mixin 만 써도 뽕뽑는다고 할 수 있다. 

css도 변수가 가능하다. 
sass보다는 패턴이 조금 더 어렵게 느낄 수 있다. 

css 전역변수는 중간중간 다시 선언하면 그 위치 지점으로 변경이 된다. 
sass는 명령형 변수이기 때문에 처음에는 헷갈릴 수 있다. 

---
버튼 스타일링 및 네이밍 방식 변경
✅ 1. 버튼의 폰트 크기를 CSS 변수를 이용해 지정
✔ --small, --medium, --large, --default와 같은 CSS 변수를 사용하여 폰트 크기 설정
✔ 마크업 순서를 작은 버튼부터 큰 버튼 순서로 정렬하여 논리적인 흐름 유지

✅ 2. 디자인 중심 네이밍 → 기능 중심 네이밍 변경
✔ 기존에는 button-small, button-medium, button-large처럼 디자인 크기 중심으로 네이밍
✔ 새로운 방식에서는 기능 중심(open-button, close-button, popup-button, info-button)으로 변경
✔ 버튼의 역할이 명확해지면서 유지보수가 쉬워지고, 스타일과 기능을 분리할 수 있음

✅ 3. 코드의 가독성과 유지보수성을 고려한 개선
✔ 선택자 간 줄을 넣어 가독성을 높이기
✔ CSS 클래스 이름을 UI 디자인이 아닌 기능적인 역할을 반영하도록 변경
---

13:00 ~ 13:50
전역 변수를 로컬에 가져오는걸 자제할 것이다. 
하지만 과제할 때는 적절한 변수를 사용하는지 보게 된다. 
css의 다양한 기능들을 실제로 사용해봐라!

아원자 색상을 모두 변수로 지정해보자.
무조건 사용할 색상을 변수로 지정해놓고

주요 색상을 재할당하여서 사용할 수 있다.

--- 색상 팔레트 ---
--red: red;
--orange: orange;
--yellow: yellow;
--green: green;
--blue: blue;
--purple: purple;

--- 주요 색상 ---
--primary: var(--red);
--secondary: var(--blue);
--tertiary: var(--green);

이렇게 많이 쓴다. 

position의 initial-value: static
line-height의 normal
많이 찾아보고 반영해보아라. 그래서 mdn을 열어보아라.
*/

/* 25.02.25(화) */
/* 9:00 ~ 9:50 
🤨 notification = 토스트(Toast)아래서 위로, 스낵바(Snack bar)위에서 아래로 (알림창)
https://aoa.gitbook.io/skymimo/aoa-2023/ui-aria-2022-2024/snack-bar

✅ src/ui/styles/03-toast.css 코드 풀 해서 화인 해보기.

https://caniuse.com/
custom properties를 값으로 사용 가능한지 답을 해준다. 
예를 들어 var()를 사용할 수 있는지 확인해보자.

popover는 검색이 안된다. mdn 검색하니 
브라우저 호환성을 꼭 확인 해봐라. 


전역 변수에서 아래 변수를 불러오는 방법 (theme.css)
body {
  color: var(--pastel-color); (연관)
}

+ 키보드 다루는 팁!!

command(window ctrl) + D 하고
command(ctrl)  + shift + L 하면 동시에 선택이 된다. 

command(ctrl) + D 여러번 누르다
command(ctrl) + k 하면 일부분만 넘어갈 수 있다. 





/* "기록보다 마킹" 전략
모르겠다. 
❓

중요하다.
⭐️

추가 학습 필요.
🤨

완료
✅
*/

/* 오늘 저녁 예습 
float - 내일 1교시 예정
position sticky, fixed
반응형
- 쿼리
- layout

과제 정답지는 없고 수업 시간에 같이 만들어 볼 것이다.


*/


/* 오늘 저녁 복습 
스낵바(Snack bar) 적용 사례 꼼꼼하게 읽어보고 적용 해보기
https://aoa.gitbook.io/skymimo/aoa-2023/ui-aria-2022-2024/snack-bar



*/


/* 3차 과제 준비 
과제 : 
- 파비콘, 예쁘게 꾸미기 확인
- 이미지 성능 개선
- 상대, 절대 경로 확인 https://discord.com/channels/1318397504664113232/1340934866421682206/1343385992974962698
- reset import 하고 개발자 도구에서 Network 200-300번대로 확인할 것.
- 브라우저 호환성을 꼭 확인 해봐라. 

css 변수 활용하기 
1. 전역 변수 정의
root: {
  --primary-color: red;
}

2. 모든 값들은 변수를 활용해주세요. (최대한 많이 사용하는게 좋다.컴포넌트 관리 차원에서 진행)
.wrapper {

  button {
  font-size: var(--font-size, 1rem(대안 콜백 준비);
  background-color: var(--bg-color,  #fff);
  color:var(--text-color, #777);
  }
  button.close {
    --font-sise: var(--default);
  }
}

14:00 ~ 14:50
이 속성이 상속되는 요소일까? 역으로 개발자 도구 찾아보는 것으로 생각을 확장 시켜라.




*/


/* 4주차 피드백 */



/* "기록보다 마킹" 전략
모르겠다. 
❓

중요하다.
⭐️

추가 학습 필요.
🤨
*/